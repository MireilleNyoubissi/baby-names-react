{"ast":null,"code":"var _jsxFileName = \"/home/codeyourfuture/challenge-baby-name-picker/src/BabyNamesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BabyNamesList(props) {\n  _s();\n\n  const [babyName, setBabyName] = useState(\"\");\n  const [favorites, setFavorites] = useState([]);\n\n  const addFavorites = () => {\n    setFavorites(favorites.concat([babyName + \"\"]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: favorites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.data.map((babyName, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: babyName.sex === 'm' ? /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: e => addFavorites(setBabyName(babyName.name)),\n          className: \"genderFormatBoy\",\n          children: babyName.name\n        }, babyName.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: e => addFavorites(setBabyName(babyName.name)),\n          className: \"genderFormatGirl\",\n          children: babyName.name\n        }, babyName.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BabyNamesList, \"p1M0H7cNmWPyMOGneoVcmsRf5t8=\");\n\n_c = BabyNamesList;\nexport default BabyNamesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BabyNamesList\");","map":{"version":3,"sources":["/home/codeyourfuture/challenge-baby-name-picker/src/BabyNamesList.js"],"names":["React","useState","BabyNamesList","props","babyName","setBabyName","favorites","setFavorites","addFavorites","concat","data","map","index","sex","e","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AAE3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMO,YAAY,GAAG,MAAM;AAEzBD,IAAAA,YAAY,CAACD,SAAS,CAACG,MAAV,CAAiB,CAACL,QAAQ,GAAG,EAAZ,CAAjB,CAAD,CAAZ;AACD,GAHD;;AAOE,sBACE;AAAA,4BAEE;AAAA,6BACE;AAAA,kBAKIE;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,gBACGH,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAe,CAACP,QAAD,EAAWQ,KAAX,kBACd;AAAA,kBACGR,QAAQ,CAACS,GAAT,KAAiB,GAAjB,gBACC;AACE,UAAA,OAAO,EAAGC,CAAD,IAAON,YAAY,CAACH,WAAW,CAACD,QAAQ,CAACW,IAAV,CAAZ,CAD9B;AAEE,UAAA,SAAS,EAAC,iBAFZ;AAAA,oBAKGX,QAAQ,CAACW;AALZ,WAGOX,QAAQ,CAACY,EAHhB;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC;AACE,UAAA,OAAO,EAAGF,CAAD,IAAON,YAAY,CAACH,WAAW,CAACD,QAAQ,CAACW,IAAV,CAAZ,CAD9B;AAEE,UAAA,SAAS,EAAC,kBAFZ;AAAA,oBAKGX,QAAQ,CAACW;AALZ,WAGOX,QAAQ,CAACY,EAHhB;AAAA;AAAA;AAAA;AAAA;AAVJ,uBADD;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAsCH;;GAnDQd,a;;KAAAA,a;AAsDT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction BabyNamesList(props){\n  \n  const [babyName, setBabyName] = useState(\"\");\n  \n  const [favorites, setFavorites] = useState([]);\n\n  const addFavorites = () => {\n    \n    setFavorites(favorites.concat([babyName + \"\"]));\n  }\n\n \n\n    return (\n      <>\n      \n        <ul>\n          <li>\n            \n            {/* {favorites.map((favorite, i) => (\n              <li key={i}>{favorite}</li>\n            ))} */}\n            { favorites }\n          </li>\n        </ul>\n        <hr />\n        <ul>\n          {props.data.map((babyName, index) => (\n            <>\n              {babyName.sex === 'm' ? (\n                <li\n                  onClick={(e) => addFavorites(setBabyName(babyName.name))}\n                  className=\"genderFormatBoy\"\n                  key={babyName.id}\n                >\n                  {babyName.name}\n                </li>\n              ) : (\n                <li\n                  onClick={(e) => addFavorites(setBabyName(babyName.name))}\n                  className=\"genderFormatGirl\"\n                  key={babyName.id}\n                >\n                  {babyName.name}\n                </li>\n              )}\n            </>\n          ))}\n        </ul>\n      </>\n    );\n}\n\n\nexport default BabyNamesList;"]},"metadata":{},"sourceType":"module"}